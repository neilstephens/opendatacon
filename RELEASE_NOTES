# opendatacon version 1.9.4

## 1.9.4
  * DNP3Port
    * "BindIP" option to make it possible to bind to a specified interface instead of 0.0.0.0
    * Support for Analog/Binary Output Statuses
    * opendnp3 bugfixes
      * proper fix for IIN triggered integrity scans
      * fixed priority inversion of startup tasks
      * fixed logic race where multiple link sessions could call BeginChannelAccept on the same channel
      * removed link layer transmit wait states that aren't in spec
    * opendnp3 optional retries for IIN integrity
  * LuaPort
    * garbage collection optimisation
    * minor bugfixes
  * Misc bugfixes

## 1.9.3
  * DNP3Port
    * TLS version and ciphers settable in config
    * opendnp3 bugfixes/workarounds
      * DEVICE_RESTART and EVENT_BUFFER_OVERFLOW IINs weren't triggering an integrity scan
      * TCP server would listen before any stations added or enabled
    * ConnectionStabilityTimems option to avoid ONDEMAND connections for short lived upstream connections
  * Updated dependencies

## 1.9.2
  * Broken release

## 1.9.1
  * Improved some UI commands to accept delimited strings
  * DNP3Port:
    * opendnp3 fixes:
	  * Fixed the link layer keep-alive callbacks to allow proper state machine
	  * Fixed link layer keep-alive timing
	* Added ONDEMAND ServerType for DNP3Outstation

## 1.9.0
  * New plugins with embedded Lua!
    * Write your own LuaPort, LuaTransform, LuaLog sink, or Lua powered UI script
    * Access all the IOTypes, and a bunch of helper function from within your Lua code
    * Develop and execute UI Lua scripts directly in the out-of-the-box WebUI.
      * With syntax highlighting and checking 
  * Regex log sink filters
  * Unlimited log sinks and filters from the config or UI
  * Spoof events from/to arbitrary Ports and/or Connectors through a UI (or a UI script)
  * Misc Bugfixes

## 1.8.0
  * New Port type added: FileTransferPort - for transferring files via OctetString data type
  * DNP3 Ports, JSON Port, and Python Port support for OctetString
  * Bugfixes for Python Port, and more examples
  * Option to get status callback for events published from PyPort
  * SimPort UI features - std dev scaling, abs analog toggle, reset start vals
  * SimPort database playback fixes and support for Binary
  * DNP3 Analog control bugfixes
  * i386 packages now built on Debian Bookworm
  * DNP3 UDP/link-handling bugfixes

### PyPort API change
There's a minor change to the PyPort Config API that won't break anything if your Python code was based on the examples.
  * The json config for a PyPort is now passed as a single string in the first argument of the 'Config' routine.
  * The json is the merged config from all config files and 'ConfOverrides'
    * This includes config from "Inherits" usage that wasn't previously supported by PyPort
  * The routine signature remains the same (two string args), but the second argument will always be ""

The example Python code in the repo has always immediately merged the previously separate configs,
so this shouldn't break any legacy code that's based on the examples.
It would be unlikely to break any code that uses the config as intended in any case.
And now config file "Inherits" are supported.

## 1.7.13
  * Bugfix for DNP3MasterPort comms point getting stuck in failed state

## 1.7.12
  * Bugfix in opendnp3 library (link layer state machine could lock up on simultaneous timeout/reconnect)

## 1.7.11
  * Fixed lack of string conversion for analog output events
  * Fixed spurious PyPort log message
  
## 1.7.10
  * Conitel/MD3 status word UI commands
  * DNP3MasterPort HeartBeatTimems added to CommsPoint options
  * SimPort binary feedback Delayms option
  * TCPThrottleWriteDelayms option for Conitel/MD3 Ports
  * Conitel/Baker port AdjustTimeOffsetMilliSeconds UI command
  * DNP3Port Analog Output/Controls
  * MD3 Wireshark disector improvements
  * Misc bug fixes

## 1.7.9
  * Conitel/Baker/MD3/Sim/Py port bugfixes
  * ONDEMAND connection fixes
    * Some ports were connecting on demand, but not disconnecting on lack of demand
  * TCPLog has it's own level
  * reload_config fixes
    * changed ports weren't receiving UI commands
    * ensure ports post all events to asio
  * PyPort Kafka example improvements/fixes

## 1.7.8
  * DNP3MasterPort - link down flag clearing hot fix
  
## 1.7.7
  * DNP3MasterPort - ability to configure custom flags to set/clear on link down

## 1.7.6
  * systemd service reload support
  * Simport position feeback (increment/decrement controls) optional step size
  * Conitel MCA/B change bit logic fix

## 1.7.5
  * AnalogScaling Transform added

## 1.7.4
  * Hotfix - the throttling wasn't actually being used in 1.7.3

## 1.7.3
  * DNP3OutstationPort UI command for simulating restart IIN
  * TCP throttling (config options to use throttling in MD3 and CB Ports)
  * Simulate dropped packets in MD3 and CB Ports
  * Sequence numbers in MD3 wireshark disector

## 1.7.2
  * DNP3MasterPort re-asserts comms down for late upstream connections
  * DNP3OutstationPort now stores current state for quality updates
  * DNP3 time sync offset added to current state JSON
  * Fix SimPort SendEvent - wouldn't work without quality since 1.7.0 

## 1.7.1
  * Fix windows/mac builds
  * Fix crash when quality for unconfigured event sent to DNP3OutstationPort

## 1.7.0
  * All DataPorts now have access to an EventDB container for storing latest events
  * DNP3Ports now leverage the EventDB to handle quality better
	* Existing quality flags and values are retained on comms lost events
  * JSONPort and DNP3Port use EventDB to provide more comprehensive current state to UIs
  * Example WebUI html simplified for Configuration and CurrentState pages
  * Critical fix for issuing DNP3 integrity scans at appropriate times
    * On startup
    * And every time COMMS_LOST quality needs clearing

## 1.6.3
  * DNP3OutstationPort support for requesting and accepting time sync from master
  * DNP3OutstationPort commands to set application level IIN flags
  * DNP3Masterstation support for 'LAN' time sync mode
  * Another fix for SimPort control feedback
    * validate feedback indexes

## 1.6.2
  * Hotfix for SimPort control feedback
    * fix regression in support of control without feedback
    * fix RESTFUL interface crash when requesting status of control without feeback

## 1.6.1
  * WebUI uses html files from the install dir by default now
  * Fixed console prompt anchoring the rest of the way (avoid reverse wrap around in some terminals)
  
## 1.6.0
  * Replaced libmicrohttpd with Simple-Web-Server
  * Stability fix for Conitel/Baker and MD3 on OEL
  * Console prompt anchoring had a bug on some terminals when reversing the cursor
  * Other minor bug fixes

## 1.5.2
  * Directory structure of code changed to be a bit neater
  * Periodic log flushing is optional now, for backwards compat. with older behaviour
  * Workaround for asio shutdown bug and opendnp3 startup bug

## 1.5.1
  * Asio was updated to latest in 1.5.0, but was causing shutdown to hang or crash under windows
    * rewound asio to the most recent stable release
  * No feature changes 

## 1.5.0
  * Reload config on the fly
    * if running as a daemon, SIGHUP triggers a config reload
    * "reload_config" ConsoleUI command
    * Detects Added, Removed or changed objects, and logger configuration
    * Only interupts operation of changed items, apart from a small synchronisation bump 
  * SimPort stores the latest Payload, Quality and Timstamp for displaying current state in:
    * Web UI
    * Console UI
    * Simport RESTFUL HTTP interface
  * ConsoleUI
    * 'Anchor' the prompt at the bottom of the console (toggle with (Esc))
      so you can still see what you're typing even if log messages are printing

## 1.4.0
  * C++17
  * Dropped support for OEL6 in favour of > OEL7
  * Dropped support for jessie in favour of buster Debian/Raspbian
  * TCP keepalives for native protocols
  * Flush logs at least every minute or on command
  * BlackHoleTransform for listen*only ports
  * HTTP RESTFUL interface to SimPort and PythonPort
  * DNP3Port:
    * opendnp3 3.0.4
    * UDP and TLS support
    * Smarter keepalive timeout behaviour
  * PyPort:
    * examples (in git repo)
    * bundling of stdlib
  * SimPort:
    * Play back Analogs from SQLite3 DB
    * Position feedback (think tap changers) for Controls
  * JSONPort:
    * Option to accept everything (not just configured indexes)
  * ConsoleUI:
    * case insensitive commands
  * WebUI major overhaul
    * Modernised rendering
    * Realtime log viewer
    * Display point names
    * Simport control panel
  * Faster, cleaner shutdown
  * Numerous features and fixes for Conitel/Baker and MD3 
  * Other small features/fixes

## 1.3.0
  * PyPort: Implement your own port in Python!
  * Optional bundling of system/3rdparty libs in package
  * Conitel/MD3 fixes
  * SimPort UI functions
    * force points
    * manually send events
    * change event rates
  * Other small features/fixes

## 1.2.2
  * Conitel (CBPort) improvements and fixes
  * Further core fixes for clean shutdown
  * Reduced redundancy by compiling ASIO only into libODC
  * Upstream fixes to opendnp3
  
## 1.2.1
  * Updated third party libraries
  * Fixes for cleaner shutdown

## 1.2.0
  * CBPort * Conitel 2020 and Baker protocols
  * Extra core tests
  * Major core bugfixes * bugs were introduced in 1.0.0
    * ALL PREVIOUS 1.X.X VERSIONS ARE CONSIDERED BROKEN/DEPRECATED
    
## 1.1.1
  * Fix Windows packages * some dlls weren't bundled properly, and x86 named wrong 

## 1.1.0
  * MD3Port
  * Refined build system
  * CI build and deploy  

## 1.0.0
  * Fixed long*standing defect where command status delays would block calling strand
    (changed to callbacks for event feedback instead of using futures)
  * Code formatting enforced by git hooks and cmake
  * Logging overhaul with spdlog 
  * New commands to set log level from console
  * Decoupled everything except DNP3Port from depending on opendnp3
    (involved major overhaul to internal event data types)
  * Upgraded DNP3Port to use the latest version of opendnp3
  * PID file support, fixed daemon mode, and updated RHEL init script
  * more robust dynamic loading/unloading of modules
  * Fixed non thread*safe access to libmodbus in ModbusPort
  * Build system can now handle dependencies with git submodules
  * Many other small enhancements, including incorporating feedback from a 3rd party code review
  
## 0.5.1
  * Hotfix to make daemon mode work as expected

## 0.5.0
  * Binary packaging includes all required notices, licences, readmes and release notes
    * Prebuilt packages can now be distributed * check github releases
  * Misc. fixes recommended by code review (more to come in future releases)  

## 0.4.1 / 0.3.5 (backport)
  * Hotfix for File Logger * Logs persist on restart
  * DNP3 Master port initialise port down (comms point, quality flags) directly before enabling stack.
  
## 0.4.0
  * Improved memory management for dynamically loaded modules
  * CPack package generation
  * Linux daemon / Windows service
  * Beginnings of test suite
  * Console UI plugin
  * Simulator Port
  * Modbus Port
  * Index Mapping Transform
  * Serial support for DNP3 Port
  * DNP3 Outstation and Master now support both TCP Client and Server modes
  * JSON Port support for reading, writing and controls (with feedback), and TCP Server support
  * C++14 under the hood

## 0.3.4
  * Hotfix for DNP3OutstationPort * DNP3 outstation tcp socket was configured to only re*listen after 5 seconds
  * Exposed configuration items for min and max retry periods for listening and connecting tcp sockets.

## 0.3.3
  * README and headers now packaged in linux build archives
  * Built against opendnp3 with link layer state machine bugfix, and keepalive fix
  * Bugfix for crashing release builds (unknown symbol IOHandler::InDemand())

## 0.3.2
  *Datalink layer status on DNP3Port(s)
  *Datalink layer keepalives

## 0.3.1
  * (Dis)Connection event (de)muxing
  * Lack*of*demand connection dropping for ONDEMAND DNP3MasterPort
  * New RateLimitTransform
  * Transform library API
  * Empty config filenames allowed, to allow entire config in overrides
  * Bugfixes 

## 0.3.0
  * Updated DNP3Port to use opendnp3 2.0.1*RC2
  * Creation of interface to create UI plug*ins
  * WebUI plug*in with SVG mimics (unstable)
  
## 0.2.6
  * Preservation of point values when marking points bad quality due to downstream loss of comms

## 0.2.5
  * Added server type for DNP3 master port for "on demand" masters
  * Added polling timer (with DemandCheckPeriodms) on DNP3 outstation to generate connect event for downstream ports
  * Fix to comms point index
  * Mark points as bad quality and update comms point when enabling/disabling port

## 0.2.4
  * Exposed all OpenDNP3 configuration parameters in DNP3Port
  * Added "WaitForCommandResponses" flag so that command responses can return a status immediately
  * MasterPort is enabled asynchronously in response to upstream connection event

## 0.2.3
  * Added DNP3 Control Code Override functionality
  * Added threshold transform
  * Fixed issue in transform code when events are blocked

## 0.2.2
  * Fixed building under Windows

## 0.2.0
  * Assign class on startup

## 0.1.0
  * Initial release
